pipeline {
    agent { label 'local-agent' }
    environment {
        imageTag = "demo-project-${env.BUILD_NUMBER}"
        registry = 'nikhildocker1986/demoproject'
        registryCredential = 'DockerHub'
    }
    stages {
        stage('Build Jar') {
            steps {
                bat "mvn clean package -DskipTests"
            }
        }
        stage('Build Docker Image') {
            steps {
                script {

                    dockerImage=docker.build("${env.registry}:${env.BUILD_NUMBER}")
                }
            }
        }
        stage('Push Image to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: env.registryCredential, passwordVariable: 'pass', usernameVariable: 'user')]) {
                        bat "docker login --username=${user} --password=${pass}"
                        bat "docker push ${env.registry}:${env.BUILD_NUMBER}"
                    }
                }
            }
        }
    }
    post
    {
        success
        {
            /*script {
                 def currentBuildNumber = env.BUILD_NUMBER
                 build job: 'run-test-on-AWS',
                 parameters: [
                     string(name: 'PULLED_BUILD_NUMBER', value: currentBuildNumber)
                 ]
            }*/
            script {
               def currentBuildNumber = env.BUILD_NUMBER
               build job: 'terraform-file-execute'
                  }
        }
    }
   }
